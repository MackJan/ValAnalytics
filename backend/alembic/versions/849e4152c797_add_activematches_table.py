"""add ActiveMatches table

Revision ID: 849e4152c797
Revises: 839f36676feb
Create Date: 2025-06-01 08:08:10.504660

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '849e4152c797'
down_revision: Union[str, None] = '839f36676feb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activematches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activematches_match_uuid'), 'activematches', ['match_uuid'], unique=True)
    op.create_table('match',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('map_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('queue', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_match_match_uuid'), 'match', ['match_uuid'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('riot_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_riot_id'), 'user', ['riot_id'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('userauthentication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('riot_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('authorization', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('entitlement', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('client_platform', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('client_version', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('num_used', sa.Integer(), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userauthentication_riot_id'), 'userauthentication', ['riot_id'], unique=True)
    op.create_table('matchteam',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_matchteam_label'), 'matchteam', ['label'], unique=False)
    op.create_index(op.f('ix_matchteam_match_id'), 'matchteam', ['match_id'], unique=False)
    op.create_table('matchplayer',
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('riot_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('kills', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['matchteam.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'player_id')
    )
    op.create_index(op.f('ix_matchplayer_team_id'), 'matchplayer', ['team_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_matchplayer_team_id'), table_name='matchplayer')
    op.drop_table('matchplayer')
    op.drop_index(op.f('ix_matchteam_match_id'), table_name='matchteam')
    op.drop_index(op.f('ix_matchteam_label'), table_name='matchteam')
    op.drop_table('matchteam')
    op.drop_index(op.f('ix_userauthentication_riot_id'), table_name='userauthentication')
    op.drop_table('userauthentication')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_riot_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_match_match_uuid'), table_name='match')
    op.drop_table('match')
    op.drop_index(op.f('ix_activematches_match_uuid'), table_name='activematches')
    op.drop_table('activematches')
    # ### end Alembic commands ###
